---
import Icon from "../../components/common/Icon.astro";
import { getConfigurationCollection } from "../../lib/utils";

const { data: config } = await getConfigurationCollection();

const svgModules = import.meta.glob("../../images/svg-path/*.svg", {
  query: "raw",
}) as Record<string, () => Promise<{ default: string }>>;

const svgPaths = await Promise.all(
  config.personal.technologies.map(async (tech) => {
    const match = Object.entries(svgModules).find(([key]) =>
      key.includes(`${tech}.svg`),
    );
    if (!match) return "";
    const mod = await match[1]();
    return mod.default ?? "";
  }),
);
---

<div class="py-8 px-6">
  <div class="relative overflow-x-hidden">
    <div
      class="pointer-events-none absolute inset-y-0 left-0 w-32 bg-gradient-to-r from-[var(--background)] to-transparent z-20"
    >
    </div>
    <div
      class="pointer-events-none absolute inset-y-0 right-0 w-32 bg-gradient-to-l from-[var(--background)] to-transparent z-20"
    >
    </div>

    <div
      class="flex animate-scroll hover:animate-paused gap-12 md:gap-20 w-max"
    >
      {svgPaths.map((svgPath) => <Icon size={48} set:html={svgPath} />)}
    </div>
  </div>
</div>

<style is:global>
  @keyframes scroll {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-50%);
    }
  }
  .animate-scroll {
    animation: scroll 40s linear infinite;
  }

  @media (min-width: 768px) {
    .animate-scroll {
      animation-duration: 20s;
    }
  }
</style>
